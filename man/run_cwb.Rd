% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_cwb.R
\name{run_cwb}
\alias{run_cwb}
\title{Calculate bootstrap outcomes or test statistics using cluster wild bootstrapping}
\usage{
run_cwb(
  model,
  cluster,
  R,
  f = NULL,
  ...,
  auxiliary_dist = "Rademacher",
  adjust = "CR0",
  simplify = FALSE
)
}
\arguments{
\item{cluster}{Vector indicating the clustering variable.}

\item{f}{Optional function to be used to calculate bootstrap test statistics based on the bootstrapped outcomes. Default value is NULL. If f is NULL, this function returns a list containing bootstrapped outcomes.}

\item{...}{Optional arguments to be passed to the function specified in \code{f}.}

\item{adjust}{Character string specifying which small-sample adjustment should be used to multiply the residuals by, with available options "CR0", "CR1", "CR2", "CR3", or "CR4". The default is set to CRO, which will multiply the residuals by identity matrices and therefore, will not add any adjustments to the bootstrapping algorithm.}

\item{simplify}{Logical, with TRUE indicating the bootstrapped outcomes or F statistics will be simplified to a vector or matrix and FALSE indicating the results will be returned as a list.}

\item{full_model}{Model fit using \code{robumeta::robu()} and \code{metafor::rma.mv()}. For cluster wild bootstrapping, a null model is recommended, with null model indicating a model containing all variables except the ones being tested.}

\item{auxiliary_distribution}{Character string indicating the auxiliary distribution to be used for cluster wild bootstrapping, with available options: "Rademacher", "Mammen", "Webb six", "uniform", "standard normal". The default is set to "Rademacher." We recommend the Rademacher distribution for models that have at least 10 clusters. For models with less than 10 clusters, we recommend the use of "Webb six" distribution.}
}
\value{
A list or matrix containing either the bootstrapped outcomes or bootstrapped test statistics.
}
\description{
Calculate bootstrap outcomes or test statistics using cluster wild bootstrapping for meta-analytic models fit using \code{robumeta::robu()} and \code{metafor::rma.mv()}
}
\examples{
library(clubSandwich)
library(robumeta)

model <- robu(d ~ 0 + study_type + hrs + test,
             studynum = study,
              var.eff.size = V,
              small = FALSE,
              data = SATcoaching)


bootstraps <- run_cwb(
  model = full_model,
  cluster =  full_model$data.full$study,
  R = 12,
  adjust = "CR2",
  simplify = FALSE
)



}
