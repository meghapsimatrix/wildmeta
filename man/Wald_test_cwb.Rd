% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Wald_test_wildmeta.R
\name{Wald_test_cwb}
\alias{Wald_test_cwb}
\title{Calculate p-values with cluster wild bootstrapping for meta-regression models.}
\usage{
Wald_test_cwb(
  full_model,
  constraint_matrix,
  R,
  auxiliary_dist = "Rademacher",
  adjust = "CR0"
)
}
\arguments{
\item{full_model}{Model fit using \code{robu()} or \code{rma.mv()} that includes all moderators of interest.}

\item{constraint_matrix}{A q X p constraint matrix be tested. Can be specified using constrain_equal, constrain_zero, or constrain_pairwise from the clubSandwich package}

\item{R}{number of bootstrap replications.}

\item{adjust}{Character string specifying which small-sample adjustment should be used to multiply the residuals by, with available options "CR0", "CR1", "CR2", "CR3", or "CR4". The default is set to CRO, which will multiply the residuals by identity matrices and therefore, wil not add any adjustments to the boostrapping algorithm.}

\item{auxiliary_distribution}{Character string indicating the auxiliary distribution to be used for cluster wild bootstrapping, with available options: "Rademacher", "Mammen", "Webb six", "uniform", "standard normal". The default is set to "Rademacher." We recommend the Rademacher distribution for models that have at least 10 clusters. For models with less than 10 clusters, we recommend the use of "Webb six" distribution.}
}
\value{
A tibble containing the name of the test and the p-value.
}
\description{
Calculates p-values for single coefficient and multiple contrast hypothesis tests using cluster wild bootstrapping.
}
\examples{
library(clubSandwich)
library(robumeta)

model <- robu(d ~ 0 + study_type + hrs + test,
             studynum = study,
              var.eff.size = V,
              small = FALSE,
              data = SATcoaching)

C_mat <- constrain_equal(1:3, coefs = coef(model))

Wald_test_cwb(full_model = full_model,
              constraint_matrix = C_mat,
              R = 12)

}
