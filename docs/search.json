[{"path":"https://meghapsimatrix.github.io/wildmeta/articles/cwbmeta.html","id":"dependence-in-meta-analysis","dir":"Articles","previous_headings":"","what":"Dependence in Meta-Analysis","title":"Cluster Wild Bootstrapping for Meta-Analysis","text":"Typical methods conduct meta-analysis meta-regression work assumption effect size estimates independent. However, primary studies often report multiple, statistically dependent estimates effect sizes. Dependent effect sizes can occur correlated effects structure, hierarchical effects structure, combination two (Hedges, Tipton, & Johnson, 2010; James E. Pustejovsky & Tipton, 2021). correlated effects data structure typically occurs due multiple correlated measures outcome, repeated measures outcome data, comparison multiple treatment groups control group (Hedges, Tipton, & Johnson, 2010). hierarchical effects structure typically occurs meta-analysis includes multiple primary studies conducted researcher, lab, region (Hedges, Tipton, & Johnson, 2010). Researchers may inclined ignore dependence use methods assume effect size estimate independent. However, can result inaccurate standard errors , consequently, hypothesis tests incorrect Type error rates confidence intervals incorrect coverage levels (Becker, 2000). Ad-hoc methods handling dependence include averaging effect sizes study selecting single effect size per study. methods result loss information suitable studying within-study variation effect sizes (Hedges, Tipton, & Johnson, 2010). method called shifting unit--analysis involves running meta-analytic models different subsets data (Cooper, 1998). However, strategy useful researcher wants summarize effects across subsets study differential effects (Becker, 2000). ideal solution handling dependence use multivariate model (Becker, 2000; Hedges, Tipton, & Johnson, 2010). approach explicitly models dependence among effect sizes (Becker, 2000; Hedges, Tipton, & Johnson, 2010). However, multivariate meta-analysis requires knowledge correlations covariances pairs effect size estimates within study, often difficult obtain primary studies. handle dependence without knowing covariance structure effect size estimates, Hedges, Tipton, & Johnson (2010) proposed use robust variance estimation (RVE). RVE involves estimating variances meta-regression modelâ€™s coefficients using sandwich estimators valid even covariance structure unknown mis-specified (Hedges, Tipton, & Johnson, 2010). However, performance characteristics RVE asymptotic large number clusters studies required provide accurate standard error estimates (Hedges, Tipton, & Johnson, 2010). number studies meta-analysis small, RVE, originally proposed Hedges, Tipton, & Johnson (2010), can result downwardly biased standard errors inflation Type error rates (Hedges, Tipton, & Johnson, 2010; Tipton, 2015). Tipton (2015) Tipton & Pustejovsky (2015) examined several small sample correction methods improve performance RVE. Tipton (2015) recommended CR2 type correction RVE well use Satterthwaite degrees freedom single coefficient tests. Tipton & Pustejovsky (2015) examined corrections multiple-contrast hypothesis tests. Tipton & Pustejovsky (2015) found HTZ test, extension CR2 correction method Satterthwaite degrees freedom, controlled Type 1 error rate adequately even number studies small. However, Joshi, Pustejovsky, & Beretvas (2021) showed, simulations, HTZ test can conservative. authors examined another method, cluster wild bootstrapping (CWB), studied econometrics literature meta-analytic context. results simulations Joshi, Pustejovsky, & Beretvas (2021) showed CWB adequately controlled Type 1 error rate provided higher power HTZ test, especially multiple-contrast hypothesis tests.","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/articles/cwbmeta.html","id":"bootstrapping","dir":"Articles","previous_headings":"","what":"Bootstrapping","title":"Cluster Wild Bootstrapping for Meta-Analysis","text":"General bootstrapping can used estimate measures uncertainty, like standard errors, p-values confidence intervals, even methods fail (Boos & others, 2003). Bootstrapping involves re-sampling original data many times create empirical distribution used place distribution estimate test statistic (Boos & others, 2003). Several bootstrapping data generating processes available. common one pair bootstrapping, involves re-sampling replacement set outcome covariate data case (Freedman, 1981, 1984). data involving clusters, entire cluster re-sampled (Cameron, Gelbach, & Miller, 2008). meta-analytic studies small number clusters, pairs bootstrapping can result lack variance distribution covariates rendering estimation coefficients infeasible (Cameron, Gelbach, & Miller, 2008). Another type bootstrapping involves re-sampling residuals (Cameron, Gelbach, & Miller, 2008). case clusters, entire vector residuals cluster re-sampled (Cameron, Gelbach, & Miller, 2008; MacKinnon, 2009). procedure requires clusters equal size underlying assumption errors independently identically distributed (MacKinnon, 2009). ideal way bootstrap number clusters small use cluster wild bootstrapping, involves sampling weights multiplying residuals random weights (Cameron, Gelbach, & Miller, 2008; MacKinnon, 2009). contrast process pair bootstrapping, process CWB involve re-sampling distribution predictor variables. Thus, problem lack variance covariates due re-sampling occur CWB (Cameron, Gelbach, & Miller, 2008; MacKinnon, 2009). , contrast residual bootstrapping, CWB require clusters size require errors independently identically distributed (Cameron, Gelbach, & Miller, 2008; MacKinnon, 2009).","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/articles/cwbmeta.html","id":"cluster-wild-bootstrapping","dir":"Articles","previous_headings":"Bootstrapping","what":"Cluster Wild Bootstrapping","title":"Cluster Wild Bootstrapping for Meta-Analysis","text":"section provides overview cluster wild bootstrapping algorithm. MacKinnon (2009) recommended imposing null hypothesis running bootstrap hypothesis tests process hypothesis testing involves examining test statistic lies sampling distribution based null hypothesis. weights use cluster wild bootstrapping, MacKinnon (2015) Webb (2013) shown Rademacher weights, take values -1 1 probability 0.5 , outperform types weights studies number clusters low 10. general process conducting cluster wild bootstrapping follows (Cameron, Gelbach, & Miller, 2008; MacKinnon, 2009): Fit null model full model original data. Obtain residuals null model. Generate auxiliary random variable mean 0 variance 1 multiply residuals random variable (e.g., Rademacher weights) set constant within clusters (CWB). residuals can also multiplied CR2 adjustment matrices multiplying weights (CWB Adjusted). Adjusting residuals CR2 matrices can correct -estimation error variance working model incorrect (Davidson & Flachaire, 2008; MacKinnon, 2006; James E. Pustejovsky & Tipton, 2018). Obtain new outcome scores adding transformed residuals predicted values null model fit original data. Re-estimate full model new calculated outcome scores obtain test statistic. Repeat steps 3-5 \\(R\\) times. Calculate p-value: \\[p = \\frac{1}{R} \\sum_{r = 1}^R \\left(F^{(r)} > F\\right)\\] results simulation studies conducted Joshi, Pustejovsky, & Beretvas (2021) show difference Type 1 error rates power multiplying results CR2 adjustments matrices. However, authors study major mis-specifications working model simulation studies.","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/articles/cwbmeta.html","id":"example-from-wildmeta","dir":"Articles","previous_headings":"","what":"Example from wildmeta","title":"Cluster Wild Bootstrapping for Meta-Analysis","text":"section presents examples implement cluster wild bootstrapping using functions wildmeta package. functions package work models fit using robu() robumeta package (Fisher, Tipton, & Zhipeng, 2017) rma.mv() metafor package (Viechtbauer, 2010).","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/articles/cwbmeta.html","id":"robumeta-models","dir":"Articles","previous_headings":"Example from wildmeta","what":"robumeta models","title":"Cluster Wild Bootstrapping for Meta-Analysis","text":"examples vignette utilize SATCoaching dataset clubSandwich package (James E. Pustejovsky, 2020), originally DerSimonian & Laird (1983). standardized mean differences represent effects SAT coaching SAT verbal (SATV) /SAT math (SATM) scores. code runs cluster wild bootstrapping test multiple-contrast hypothesis effect coaching differ based study type. study_type variable indicates whether groups compared primary studies matched, randomized, non-equivalent. meta-regression model also controls hours coaching provided (hrs) whether students took math verbal test (test). , run zero-intercept meta-regression model. Wald_test_cwb() function takes full model fit using robu() function robumeta package argument. , users need specify constraint tested. , create constraint matrix using constrain_equal() function clubSandwich; indices 1 3 correspond three levels study_type variable. Users can specify number bootstrap replications R. examples , set value 99 speed computation time. practice, recommend using higher number bootstrap replications, 1999. Using replications improve power. Please see Davidson & MacKinnon (2000) guidance number bootstrap replications use. Users can also set seed Wald_test_cwb() function output function includes name test (CWB CWB Adjusted) bootstrap test p-value. users can also specify whether adjust residuals CR1 CR4matrices bootstrapping . default value adjust argument set CR0. example set adjust residuals using CR2 matrices.","code":"library(wildmeta) library(clubSandwich) library(robumeta)  full_model <- robu(d ~ 0 + study_type + hrs + test,               studynum = study,               var.eff.size = V,               small = FALSE,               data = SATcoaching)  C_mat <- constrain_equal(1:3, coefs = full_model$b.r)  Wald_test_cwb(full_model = full_model,               constraints = C_mat,               R = 99,               seed = 20201228) #>   Test Adjustment CR_type Statistic  R     p_val #> 1  CWB        CR0     CR0   Naive-F 99 0.2929293 Wald_test_cwb(full_model = full_model,               constraints = C_mat,               R = 99,               adjust = \"CR2\",               seed = 20201229) #>           Test Adjustment CR_type Statistic  R     p_val #> 1 CWB Adjusted        CR2     CR0   Naive-F 99 0.3535354"},{"path":"https://meghapsimatrix.github.io/wildmeta/articles/cwbmeta.html","id":"metafor-models","dir":"Articles","previous_headings":"Example from wildmeta","what":"metafor models","title":"Cluster Wild Bootstrapping for Meta-Analysis","text":"examples , used robu() function robumeta fit full model. section, fit full model using rma.mv() function metafor package.","code":"library(metafor) #> Loading required package: Matrix #>  #> Loading the 'metafor' package (version 3.0-2). For an #> introduction to the package please type: help(metafor)  full_model <- rma.mv(yi = d ~ 0 + study_type + hrs + test,                      V = V,                      random = ~ study_type| study,                      data = SATcoaching)  C_mat <- constrain_equal(1:3, coefs = coef(full_model))  Wald_test_cwb(full_model = full_model,               constraints = C_mat,               R = 99,               seed = 03142021) #>   Test Adjustment CR_type Statistic  R     p_val #> 1  CWB        CR0     CR0   Naive-F 99 0.1919192"},{"path":[]},{"path":"https://meghapsimatrix.github.io/wildmeta/articles/cwbmeta.html","id":"robumeta-models-1","dir":"Articles","previous_headings":"Example from wildmeta > Timing","what":"robumeta models","title":"Cluster Wild Bootstrapping for Meta-Analysis","text":"Wald_test_cwb() function runs within minute correlated effects models even using large number bootstrap replications. example 999 bootstrap replications.","code":"full_model <- robu(d ~ 0 + study_type + hrs + test,               studynum = study,               var.eff.size = V,               small = FALSE,               data = SATcoaching)  C_mat <- constrain_equal(1:3, coefs = full_model$b.r)  system.time(   res <- Wald_test_cwb(full_model = full_model,                        constraints = C_mat,                        R = 999,                         seed = 20201229) ) #>    user  system elapsed  #>  11.301   0.232  16.067"},{"path":"https://meghapsimatrix.github.io/wildmeta/articles/cwbmeta.html","id":"metafor-models-1","dir":"Articles","previous_headings":"Example from wildmeta > Timing","what":"metafor models","title":"Cluster Wild Bootstrapping for Meta-Analysis","text":"example model fit using rma.mv(). CWB takes bit longer metafor models.","code":"full_model <- rma.mv(yi = d ~ 0 + study_type + hrs + test,                      V = V,                      random = ~ study_type| study,                      data = SATcoaching)  C_mat <- constrain_equal(1:3, coefs = coef(full_model))  system.time(Wald_test_cwb(full_model = full_model,                           constraints = C_mat,                           R = 999,                           seed = 20210113)) #>    user  system elapsed  #> 256.197  36.665 348.886"},{"path":"https://meghapsimatrix.github.io/wildmeta/articles/cwbmeta.html","id":"bootstrap-distribution-plot","dir":"Articles","previous_headings":"","what":"Bootstrap Distribution Plot","title":"Cluster Wild Bootstrapping for Meta-Analysis","text":"function plot() creates ggplot figure representing distribution bootstrap replicates based results Wald_test_cwb() function. dashed line represents \\(F\\) test statistic original full model. bootstrapped p-value proportion bootstrapped \\(F\\) test statistics greater original \\(F\\) statistic.","code":"plot(res, fill = \"purple\", alpha = 0.5)"},{"path":[]},{"path":"https://meghapsimatrix.github.io/wildmeta/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Megha Joshi. Author, maintainer. James Pustejovsky. Author. Pierce Cappelli. Author.","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Joshi M, Pustejovsky J, Cappelli P (2022). wildmeta: Cluster Wild Bootstrapping Meta-Analysis. R package version 0.1.0, https://meghapsimatrix.github.io/wildmeta/index.html.","code":"@Manual{,   title = {wildmeta: Cluster Wild Bootstrapping for Meta-Analysis},   author = {Megha Joshi and James Pustejovsky and Pierce Cappelli},   year = {2022},   note = {R package version 0.1.0},   url = {https://meghapsimatrix.github.io/wildmeta/index.html}, }"},{"path":"https://meghapsimatrix.github.io/wildmeta/index.html","id":"wildmeta","dir":"","previous_headings":"","what":"Cluster Wild Bootstrapping for Meta-Analysis","title":"Cluster Wild Bootstrapping for Meta-Analysis","text":"Typical methods conduct meta-analysisâ€”pooling effect sizes analyzing moderating effects meta-regressionâ€”work assumption effect size estimates independent. However, primary studies often report multiple estimates effect sizes. Presence multiple effect sizes leads dependence estimates within study likely correlated (e.g., participants provide multiple outcome scores). increasingly popular method handle dependence, robust variance estimation (RVE), results inflated Type 1 error rate number studies small (Hedges, Tipton & Johnson, 2010; Tipton, 2015). Tipton (2015) Tipton & Pustejovsky (2015) examined several small sample correction methods. Tipton (2015) recommended CR2 type correction RVE well use Satterthwaite degrees freedom single coefficient tests. Tipton & Pustejovsky (2015) examined corrections multiple-contrast hypothesis tests. authors found HTZ test, extension CR2 correction method Satterthwaite degrees freedom, controlled Type 1 error rate adequately even number studies small. However, Joshi, Pustejovsky & Beretvas (2021) showed, simulations, HTZ test can conservative. authors examined another method, cluster wild bootstrapping (CWB), studied econometrics literature meta-analytic context. results simulations Joshi, Pustejovsky & Beretvas (2021) showed CWB adequately controlled Type 1 error rate provided higher power HTZ test, especially multiple-contrast hypothesis tests. hypothesis tests. goal package provide applied meta-analytic researchers set functions can conduct single coefficient tests multiple-contrast hypothesis tests using cluster wild bootstrapping.","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Cluster Wild Bootstrapping for Meta-Analysis","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"meghapsimatrix/wildmeta\")"},{"path":"https://meghapsimatrix.github.io/wildmeta/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Cluster Wild Bootstrapping for Meta-Analysis","text":"following example uses SATCoaching dataset clubSandwich package (Pustejovksy, 2020), originally DerSimonian Laird (1983). standardized mean differences represent effects SAT coaching SAT verbal (SATV) /SAT math (SATM) scores. code runs cluster wild bootstrapping test multiple-contrast hypothesis effect coaching differ based study type. study_type variable indicates whether groups compared primary studies matched, randomized, non-equivalent. meta-regression model also controls hours coaching provided (hrs) whether students took math verbal test (test). , run zero-intercept meta-regression model. , use robu() function robumeta package fit full model. functions package work models fit using robu() robumeta package (Fisher, Tipton, & Zhipeng, 2017) rma.mv() metafor package (Viechtbauer, 2010).","code":"library(wildmeta) library(clubSandwich) library(robumeta)  full_model <- robu(d ~ 0 + study_type + hrs + test,               studynum = study,               var.eff.size = V,               small = FALSE,               data = SATcoaching)  C_mat <- constrain_equal(1:3, coefs = full_model$b.r)  Wald_test_cwb(full_model = full_model,               constraints = C_mat,               R = 12,               seed = 20201210) #>   Test Adjustment CR_type Statistic  R     p_val #> 1  CWB        CR0     CR0   Naive-F 12 0.5833333"},{"path":"https://meghapsimatrix.github.io/wildmeta/index.html","id":"related-work","dir":"","previous_headings":"","what":"Related Work","title":"Cluster Wild Bootstrapping for Meta-Analysis","text":"want recognize packages provide algorithms conduct bootstrapping. fwildclusterboot package runs fast version cluster wild bootstrapping proposed Roodman et al.Â (2019) based Stataâ€™s boottest package (Fischer & Roodman, 2021). package runs bootstrapping linear regression models fixed effects models. best knowledge, meta-analytic models, weighted linear regression models, multiple contrast hypothesis tests supported package. multiwayvcov package implements cluster robust variance estimation well different types cluster bootstrapping, including pair, residual, cluster wild bootstrapping (Graham, Arai & HagstrÃ¶mer, 2016). cluster wild bootstrapping, Rademacher weights, Mammen weights, standard normal weights available. functions package return cluster robust variance-covariance matrices. package, hand, outputs p-values bootstrap hypothesis tests. , package particularly created applied meta-analysis whereas multiwayvcov can used regression analysis involving clusters. boot package can used generate bootstrap replicates (Canty & Ripley, 2020). main function package, boot() requires dataset function calculates estimate interest. function returns bootstrap estimate. package also contains another function, boot.ci() can used calculate bootstrap confidence intervals. package allows parallel programming. However, boot package provide functionality cluster wild bootstrapping. lmboot package implements pair, residual wild bootstrapping linear models (Heyman, 2019). package provide Rademacher Mammen weights wild bootstrapping. output function bootstrap sampling distribution. , package work clustered data.","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Cluster Wild Bootstrapping for Meta-Analysis","text":"extremely thankful Wolfgang Viechtbauer helping us solve issue update() function. also thank Mikkel Vembye testing package giving us helpful feedback.","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Cluster Wild Bootstrapping for Meta-Analysis","text":"Canty . & Ripley B. (2020). boot: Bootstrap R (S-Plus) Functions. R package version 1.3-25. https://CRAN.R-project.org/package=boot DerSimonian, R., & Laird, N. (1983). Evaluating effect coaching SAT scores: meta-analysis. Harvard Educational Review, 53(1), 1-1. Fischer, . & Roodman, D. (2021). fwildclusterboot: Fast Wild Cluster Bootstrap Inference Linear Regression Models. Available https://cran.r-project.org/package=fwildclusterboot. Fisher, Z., Tipton, E., & Zhipeng, H. (2017). robumeta: Robust variance meta-regression. Retrieved https://CRAN.R-project.org/package=robumeta Graham N., Arai M., & HagstrÃ¶mer, B (2016). multiwayvcov: Multi-Way Standard Error Clustering. R package version 1.2.3. https://CRAN.R-project.org/package=multiwayvcov Hedges, L. V., Tipton, E., & Johnson, M. C. (2010). Robust variance estimation meta-regression dependent effect size estimates. Research Synthesis Methods, 1(1), 39â€“65. https://doi.org/10.1002/jrsm.5 Heyman, M. (2019). lmboot: Bootstrap Linear Models. R package version 0.0.1. https://CRAN.R-project.org/package=lmboot Joshi, M., Pustejovsky, J. E., & Beretvas, S. N. (2021). Cluster wild bootstrapping handle dependent effect sizes meta-analysis small number studies. https://doi.org/10.31222/osf.io/x6uhk Pustejovsky, J. E. (2020). clubSandwich: Cluster-robust (sandwich) variance estimators small-sample corrections [R package version 0.4.2]. R package version 0.4.2. https://CRAN.R-project.org/package=clubSandwich Tipton, E. (2015). Small sample adjustments robust variance estimation meta-regression. Psychological Methods, 20(3), 375â€“393. https://doi.org/10.1037/met0000011 Tipton, E., & Pustejovsky, J. E. (2015). Small-Sample Adjustments Tests Moderators Model Fit Using Robust Variance Estimation Meta-Regression. Journal Educational Behavioral Statistics (Vol. 40). https://doi.org/10.3102/1076998615606099 Viechtbauer, W. (2010). Conducting meta-analyses R metafor package. Journal Statistical Software, 36(3), 1â€“48.","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/reference/Wald_test_cwb.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate p-values with cluster wild bootstrapping for meta-regression\nmodels. â€” Wald_test_cwb","title":"Calculate p-values with cluster wild bootstrapping for meta-regression\nmodels. â€” Wald_test_cwb","text":"Calculate p-values single coefficient multiple contrast hypothesis tests using cluster wild bootstrapping.","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/reference/Wald_test_cwb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate p-values with cluster wild bootstrapping for meta-regression\nmodels. â€” Wald_test_cwb","text":"","code":"Wald_test_cwb(   full_model,   constraints,   R,   cluster = NULL,   auxiliary_dist = \"Rademacher\",   adjust = \"CR0\",   type = \"CR0\",   test = \"Naive-F\",   seed = NULL )"},{"path":"https://meghapsimatrix.github.io/wildmeta/reference/Wald_test_cwb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate p-values with cluster wild bootstrapping for meta-regression\nmodels. â€” Wald_test_cwb","text":"full_model Model fit using robumeta::robu() metafor::rma.mv() includes full set moderators meta-regression model. constraints q X p constraint matrix tested. Alternately, function create matrix, specified using clubSandwich::constrain_equal() clubSandwich::constrain_zero(). R Number bootstrap replications. cluster Vector identifiers indicating observations belong cluster. NULL (default), clustering variable inferred based structure full_mod. auxiliary_dist Character string indicating auxiliary distribution used cluster wild bootstrapping, available options: \"Rademacher\", \"Mammen\", \"Webb six\", \"uniform\", \"standard normal\". default set \"Rademacher.\" recommend Rademacher distribution models least 10 clusters. models less 10 clusters, recommend use \"Webb six\" distribution. adjust Character string specifying small-sample adjustment used multiply residuals . available options \"CRO\", \"CR1\", \"CR2\", \"CR3\", \"CR4\", default \"CRO\". type Character string specifying small-sample adjustment used calculate Wald test statistic. available options \"CRO\", \"CR1\", \"CR2\", \"CR3\", \"CR4\", default \"CRO\". test Character string specifying () small-sample adjustment used calculating test statistic. Default \"Naive-F\", make small-sample adjustment. seed Optional seed value ensure reproducibility.","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/reference/Wald_test_cwb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate p-values with cluster wild bootstrapping for meta-regression\nmodels. â€” Wald_test_cwb","text":"data.frame containing name test, adjustment used bootstrap process, type variance-covariance matrix used, type test statistic, number bootstrap replicates, bootstrapped p-value.","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/reference/Wald_test_cwb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate p-values with cluster wild bootstrapping for meta-regression\nmodels. â€” Wald_test_cwb","text":"","code":"library(clubSandwich) #> Warning: package â€˜clubSandwichâ€™ was built under R version 4.1.2 library(robumeta)  model <- robu(d ~ 0 + study_type + hrs + test,              studynum = study,               var.eff.size = V,               small = FALSE,               data = SATcoaching)  C_mat <- constrain_equal(1:3, coefs = coef(model))  Wald_test_cwb(full_model = model,               constraints = C_mat,               R = 12) #>   Test Adjustment CR_type Statistic  R     p_val #> 1  CWB        CR0     CR0   Naive-F 12 0.3333333  # Equivalent, using constrain_equal() Wald_test_cwb(full_model = model,               constraints = constrain_equal(1:3),               R = 12) #>   Test Adjustment CR_type Statistic  R     p_val #> 1  CWB        CR0     CR0   Naive-F 12 0.3333333"},{"path":"https://meghapsimatrix.github.io/wildmeta/reference/plot.Wald_test_wildmeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot distribution of bootstrap test statistics â€” plot.Wald_test_wildmeta","title":"Plot distribution of bootstrap test statistics â€” plot.Wald_test_wildmeta","text":"Creates density plot showing distribution bootstrap test statistics.","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/reference/plot.Wald_test_wildmeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot distribution of bootstrap test statistics â€” plot.Wald_test_wildmeta","text":"","code":"# S3 method for Wald_test_wildmeta plot(x, ...)"},{"path":"https://meghapsimatrix.github.io/wildmeta/reference/plot.Wald_test_wildmeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot distribution of bootstrap test statistics â€” plot.Wald_test_wildmeta","text":"x Results Wald_test_cwb function ... arguments passed ggplot2::geom_density())","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/reference/plot.Wald_test_wildmeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot distribution of bootstrap test statistics â€” plot.Wald_test_wildmeta","text":"ggplot2 density plot.","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/reference/plot.Wald_test_wildmeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot distribution of bootstrap test statistics â€” plot.Wald_test_wildmeta","text":"","code":"data(\"SATcoaching\", package = \"clubSandwich\") library(clubSandwich) library(robumeta)  full_model <- robu(d ~ 0 + study_type + hrs + test,                    studynum = study,                    var.eff.size = V,                    small = FALSE,                    data = SATcoaching)   res <- Wald_test_cwb(full_model = full_model,                      constraints = constrain_equal(1:3),                      R = 99)  plot(res, fill = \"darkred\", alpha = 0.5)"},{"path":"https://meghapsimatrix.github.io/wildmeta/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages â€” reexports","title":"Objects exported from other packages â€” reexports","text":"objects imported packages. Follow links see documentation. clubSandwich constrain_equal, constrain_zero","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/reference/run_cwb.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate bootstrap outcomes or test statistics using cluster wild\nbootstrapping â€” run_cwb","title":"Calculate bootstrap outcomes or test statistics using cluster wild\nbootstrapping â€” run_cwb","text":"Calculate bootstrap outcomes test statistics using cluster wild bootstrapping meta-analytic models fit using robumeta::robu() metafor::rma.mv()","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/reference/run_cwb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate bootstrap outcomes or test statistics using cluster wild\nbootstrapping â€” run_cwb","text":"","code":"run_cwb(   model,   cluster,   R,   f = NULL,   ...,   auxiliary_dist = \"Rademacher\",   adjust = \"CR0\",   simplify = FALSE,   seed = NULL )"},{"path":"https://meghapsimatrix.github.io/wildmeta/reference/run_cwb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate bootstrap outcomes or test statistics using cluster wild\nbootstrapping â€” run_cwb","text":"model Fitted robumeta::robu() metafor::rma.mv() model. cluster wild bootstrapping, null model recommended, null model indicating model containing variables except ones tested. cluster Vector indicating observations belong cluster. R Number bootstrap replications. f Optional function used calculate bootstrap test statistics based bootstrapped outcomes. f NULL (default), function returns list containing bootstrapped outcomes. ... Optional arguments passed function specified f. auxiliary_dist Character string indicating auxiliary distribution used cluster wild bootstrapping, available options: \"Rademacher\", \"Mammen\", \"Webb six\", \"uniform\", \"standard normal\". default set \"Rademacher.\" recommend Rademacher distribution models least 10 clusters. models less 10 clusters, recommend use \"Webb six\" distribution. adjust Character string specifying small-sample adjustment used multiply residuals . available options \"CRO\", \"CR1\", \"CR2\", \"CR3\", \"CR4\", default \"CRO\". simplify Logical, TRUE indicating bootstrapped outcomes F statistics simplified vector matrix FALSE (default) indicating results returned list. seed Optional seed value ensure reproducibility.","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/reference/run_cwb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate bootstrap outcomes or test statistics using cluster wild\nbootstrapping â€” run_cwb","text":"list matrix containing either bootstrapped outcomes bootstrapped test statistics.","code":""},{"path":"https://meghapsimatrix.github.io/wildmeta/reference/run_cwb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate bootstrap outcomes or test statistics using cluster wild\nbootstrapping â€” run_cwb","text":"","code":"library(clubSandwich) library(robumeta)  model <- robu(d ~ 0 + study_type + hrs + test,              studynum = study,               var.eff.size = V,               small = FALSE,               data = SATcoaching)   bootstraps <- run_cwb(   model = model,   cluster =  model$data.full$study,   R = 12,   adjust = \"CR2\",   simplify = FALSE )  bootstraps #> [[1]] #>  [1]  0.0923906926 -0.1674382877  0.3316639350 -0.2341697878  0.1283641162 #>  [6]  0.1289224383  0.1269941059  0.3278852418  0.0459361746 -0.1349927680 #> [11]  0.2093520945  0.1861887390 -0.1034473475 -0.2945713051 -0.1442122375 #> [16] -0.3449910225  0.2450265520  0.1668918485 -0.0702942884  0.2147573229 #> [21] -0.0222968655  0.1752131381  0.0914894382  0.0076104609  0.1988225107 #> [26]  0.0088717836  0.1443909283 -0.1921659891  0.1695349973  0.6308741552 #> [31] -0.0680092931  0.3999739016  0.5751863508  0.5451985511  0.2219369751 #> [36]  0.0922842721  0.1403879069  0.1410189560  0.2014800066  0.0435775483 #> [41]  0.1817476002  0.0002081057  0.1116041131  0.1821950393  0.2762093328 #> [46]  0.0542696819  0.2438941353  0.3158746243  0.0696778523  0.2130680810 #> [51]  0.1943669492  0.6764374516 -0.3847473585  0.4454193421 -0.0933183069 #> [56] -0.0410271486 -0.4180679142  0.1442284061 -0.0817662808  0.7626841302 #> [61]  0.1030747481  0.2681584390  0.4782882586 -0.1287510993  0.2006186495 #>  #> [[2]] #>  [1]  0.0923906926  0.7772007675  0.3316639350  0.5916245439  0.1283641162 #>  [6]  0.2048784687  0.1269941059  0.3278852418  0.3272878143 -0.1349927680 #> [11]  0.0850257307 -0.0815549977 -0.1034473475 -0.2945713051  0.2266273269 #> [16]  0.4496247637  0.2450265520  0.1668918485  0.1527093778 -0.0391620344 #> [21] -0.0222968655  0.1752131381  0.0914894382  0.0076104609  0.1988225107 #> [26]  0.0088717836  0.2061011175  0.3598766612  0.1695349973  0.6308741552 #> [31] -0.0680092931  0.3999739016 -0.3049756659 -0.2972065181 -0.0243834355 #> [36]  0.1289231166  0.0847617900  0.1410189560 -0.0118110834  0.1382067586 #> [41]  0.1817476002  0.0002081057  0.1116041131  0.1257431294  0.0539474878 #> [46]  0.0542696819  0.0862626853  0.3158746243  0.0696778523 -0.0005337703 #> [51]  0.1943669492 -0.4749416038  0.5862432063 -0.2439234943 -0.0933183069 #> [56]  0.2647416483 -0.4180679142  0.0794860935  0.3054807804 -0.5389696306 #> [61]  0.1206397515  0.2681584390  0.4782882586  0.4825617690  0.1309733683 #>  #> [[3]] #>  [1]  0.0923906926  0.7772007675  0.0480094729  0.5916245439  0.2276554426 #>  [6]  0.2048784687  0.3472946985  0.1241849107  0.3272878143 -0.1349927680 #> [11]  0.2093520945  0.1861887390  0.1858624369  0.3992050463 -0.1442122375 #> [16] -0.3449910225 -0.1626114626 -0.0622581072 -0.0702942884  0.2147573229 #> [21]  0.1756735021  0.0003821504  0.0914894382  0.0076104609  0.1988225107 #> [26]  0.0088717836  0.2061011175  0.3598766612  0.1695349973  0.6308741552 #> [31]  0.5998475153 -0.2229434158  0.5751863508  0.5451985511 -0.0243834355 #> [36]  0.1289231166  0.1403879069  0.0801884327  0.2014800066  0.0435775483 #> [41]  0.0473444049  0.0002081057  0.1116041131  0.1257431294  0.0539474878 #> [46]  0.2536684868  0.0862626853 -0.0079364555  0.0696778523  0.2130680810 #> [51]  0.1943669492  0.6764374516 -0.3847473585 -0.2439234943  0.2948141547 #> [56]  0.2647416483  0.6417824138  0.0794860935 -0.0817662808  0.7626841302 #> [61]  0.1030747481  0.2681584390  0.4782882586 -0.1287510993  0.2006186495 #>  #> [[4]] #>  [1]  0.0923906926  0.7772007675  0.3316639350  0.5916245439  0.2276554426 #>  [6]  0.2048784687  0.1269941059  0.1241849107  0.0459361746  0.4515892451 #> [11]  0.0850257307 -0.0815549977 -0.1034473475 -0.2945713051 -0.1442122375 #> [16] -0.3449910225 -0.1626114626 -0.0622581072 -0.0702942884  0.2147573229 #> [21]  0.1756735021  0.0003821504  0.0914894382  0.0076104609  0.1988225107 #> [26]  0.0088717836  0.2061011175  0.3598766612  0.1695349973  0.6308741552 #> [31]  0.5998475153 -0.2229434158  0.5751863508  0.5451985511  0.2219369751 #> [36]  0.0922842721  0.0847617900  0.1410189560  0.2014800066  0.0435775483 #> [41]  0.1817476002  0.0002081057  0.1116041131  0.1257431294  0.0539474878 #> [46]  0.2536684868  0.2438941353 -0.0079364555  0.0696778523 -0.0005337703 #> [51]  0.0071288986 -0.4749416038 -0.3847473585 -0.2439234943  0.2948141547 #> [56] -0.0410271486 -0.4180679142  0.0794860935  0.3054807804 -0.5389696306 #> [61]  0.1206397515  0.2681584390  0.4782882586  0.4825617690  0.1309733683 #>  #> [[5]] #>  [1]  0.5173717872 -0.1674382877  0.3316639350 -0.2341697878  0.1283641162 #>  [6]  0.2048784687  0.3472946985  0.1241849107  0.3272878143  0.4515892451 #> [11]  0.0850257307 -0.0815549977  0.1858624369  0.3992050463 -0.1442122375 #> [16] -0.3449910225 -0.1626114626 -0.0622581072  0.1527093778 -0.0391620344 #> [21]  0.1756735021  0.0003821504  0.0618871985  0.0629777039  0.1988225107 #> [26]  0.0088717836  0.2061011175  0.3598766612 -0.0240429770 -0.0768172811 #> [31]  0.5998475153 -0.2229434158  0.5751863508  0.5451985511 -0.0243834355 #> [36]  0.1289231166  0.0847617900  0.0801884327 -0.0118110834  0.1382067586 #> [41]  0.0473444049  0.0002081057  0.1116041131  0.1257431294  0.0539474878 #> [46]  0.0542696819  0.2438941353 -0.0079364555  0.1650751102 -0.0005337703 #> [51]  0.1943669492  0.6764374516 -0.3847473585 -0.2439234943  0.2948141547 #> [56]  0.2647416483 -0.4180679142  0.0794860935 -0.0817662808 -0.5389696306 #> [61]  0.1206397515 -0.0444439394 -0.2545737590 -0.1287510993  0.2006186495 #>  #> [[6]] #>  [1]  0.5173717872 -0.1674382877  0.3316639350 -0.2341697878  0.1283641162 #>  [6]  0.1289224383  0.1269941059  0.1241849107  0.0459361746  0.4515892451 #> [11]  0.2093520945  0.1861887390  0.1858624369  0.3992050463 -0.1442122375 #> [16] -0.3449910225 -0.1626114626 -0.0622581072 -0.0702942884  0.2147573229 #> [21]  0.1756735021  0.0003821504  0.0618871985  0.0629777039 -0.0232272222 #> [26]  0.3638389140  0.1443909283 -0.1921659891 -0.0240429770 -0.0768172811 #> [31] -0.0680092931  0.3999739016  0.5751863508  0.5451985511  0.2219369751 #> [36]  0.0922842721  0.0847617900  0.0801884327  0.2014800066  0.0435775483 #> [41]  0.0473444049  0.4969608558  0.2185527075  0.1821950393  0.2762093328 #> [46]  0.0542696819  0.2438941353 -0.0079364555  0.1650751102 -0.0005337703 #> [51]  0.0071288986  0.6764374516  0.5862432063  0.4454193421  0.2948141547 #> [56] -0.0410271486  0.6417824138  0.1442284061  0.3054807804 -0.5389696306 #> [61]  0.1206397515  0.2681584390  0.4782882586 -0.1287510993  0.2006186495 #>  #> [[7]] #>  [1]  0.5173717872  0.7772007675  0.3316639350 -0.2341697878  0.1283641162 #>  [6]  0.1289224383  0.3472946985  0.1241849107  0.0459361746  0.4515892451 #> [11]  0.0850257307 -0.0815549977  0.1858624369  0.3992050463  0.2266273269 #> [16]  0.4496247637  0.2450265520  0.1668918485  0.1527093778 -0.0391620344 #> [21] -0.0222968655  0.1752131381  0.0914894382  0.0076104609 -0.0232272222 #> [26]  0.3638389140  0.1443909283 -0.1921659891 -0.0240429770 -0.0768172811 #> [31]  0.5998475153 -0.2229434158 -0.3049756659 -0.2972065181 -0.0243834355 #> [36]  0.1289231166  0.0847617900  0.0801884327  0.2014800066  0.0435775483 #> [41]  0.1817476002  0.0002081057  0.1116041131  0.1821950393  0.2762093328 #> [46]  0.2536684868  0.2438941353  0.3158746243  0.1650751102 -0.0005337703 #> [51]  0.0071288986 -0.4749416038  0.5862432063  0.4454193421  0.2948141547 #> [56]  0.2647416483  0.6417824138  0.0794860935 -0.0817662808  0.7626841302 #> [61]  0.1030747481  0.2681584390  0.4782882586 -0.1287510993  0.2006186495 #>  #> [[8]] #>  [1]  0.5173717872 -0.1674382877  0.0480094729 -0.2341697878  0.2276554426 #>  [6]  0.1289224383  0.1269941059  0.3278852418  0.0459361746 -0.1349927680 #> [11]  0.0850257307 -0.0815549977  0.1858624369  0.3992050463  0.2266273269 #> [16]  0.4496247637  0.2450265520  0.1668918485 -0.0702942884  0.2147573229 #> [21] -0.0222968655  0.1752131381  0.0618871985  0.0629777039  0.1988225107 #> [26]  0.0088717836  0.2061011175  0.3598766612 -0.0240429770 -0.0768172811 #> [31]  0.5998475153 -0.2229434158  0.5751863508  0.5451985511 -0.0243834355 #> [36]  0.1289231166  0.1403879069  0.1410189560  0.2014800066  0.0435775483 #> [41]  0.0473444049  0.0002081057  0.1116041131  0.1257431294  0.0539474878 #> [46]  0.2536684868  0.0862626853 -0.0079364555  0.1650751102 -0.0005337703 #> [51]  0.1943669492 -0.4749416038  0.5862432063  0.4454193421 -0.0933183069 #> [56]  0.2647416483 -0.4180679142  0.0794860935 -0.0817662808 -0.5389696306 #> [61]  0.1206397515  0.2681584390  0.4782882586 -0.1287510993  0.2006186495 #>  #> [[9]] #>  [1]  0.5173717872 -0.1674382877  0.0480094729 -0.2341697878  0.1283641162 #>  [6]  0.1289224383  0.1269941059  0.3278852418  0.0459361746 -0.1349927680 #> [11]  0.0850257307 -0.0815549977  0.1858624369  0.3992050463  0.2266273269 #> [16]  0.4496247637 -0.1626114626 -0.0622581072 -0.0702942884  0.2147573229 #> [21] -0.0222968655  0.1752131381  0.0914894382  0.0076104609  0.1988225107 #> [26]  0.0088717836  0.2061011175  0.3598766612  0.1695349973  0.6308741552 #> [31]  0.5998475153 -0.2229434158  0.5751863508  0.5451985511  0.2219369751 #> [36]  0.0922842721  0.1403879069  0.1410189560  0.2014800066  0.0435775483 #> [41]  0.1817476002  0.0002081057  0.1116041131  0.1821950393  0.2762093328 #> [46]  0.2536684868  0.0862626853  0.3158746243  0.1650751102 -0.0005337703 #> [51]  0.0071288986  0.6764374516 -0.3847473585 -0.2439234943 -0.0933183069 #> [56]  0.2647416483 -0.4180679142  0.0794860935  0.3054807804  0.7626841302 #> [61]  0.1030747481 -0.0444439394 -0.2545737590  0.4825617690  0.1309733683 #>  #> [[10]] #>  [1]  0.5173717872  0.7772007675  0.3316639350 -0.2341697878  0.2276554426 #>  [6]  0.1289224383  0.1269941059  0.1241849107  0.0459361746 -0.1349927680 #> [11]  0.0850257307 -0.0815549977  0.1858624369  0.3992050463 -0.1442122375 #> [16] -0.3449910225 -0.1626114626 -0.0622581072  0.1527093778 -0.0391620344 #> [21]  0.1756735021  0.0003821504  0.0914894382  0.0076104609 -0.0232272222 #> [26]  0.3638389140  0.1443909283 -0.1921659891  0.1695349973  0.6308741552 #> [31] -0.0680092931  0.3999739016 -0.3049756659 -0.2972065181 -0.0243834355 #> [36]  0.1289231166  0.1403879069  0.0801884327  0.2014800066  0.0435775483 #> [41]  0.0473444049  0.0002081057  0.1116041131  0.1821950393  0.2762093328 #> [46]  0.0542696819  0.0862626853 -0.0079364555  0.1650751102  0.2130680810 #> [51]  0.0071288986 -0.4749416038 -0.3847473585  0.4454193421  0.2948141547 #> [56]  0.2647416483 -0.4180679142  0.1442284061 -0.0817662808  0.7626841302 #> [61]  0.1030747481  0.2681584390  0.4782882586  0.4825617690  0.1309733683 #>  #> [[11]] #>  [1]  0.5173717872  0.7772007675  0.3316639350  0.5916245439  0.1283641162 #>  [6]  0.1289224383  0.1269941059  0.1241849107  0.3272878143  0.4515892451 #> [11]  0.2093520945  0.1861887390 -0.1034473475 -0.2945713051 -0.1442122375 #> [16] -0.3449910225 -0.1626114626 -0.0622581072  0.1527093778 -0.0391620344 #> [21]  0.1756735021  0.0003821504  0.0914894382  0.0076104609 -0.0232272222 #> [26]  0.3638389140  0.2061011175  0.3598766612 -0.0240429770 -0.0768172811 #> [31] -0.0680092931  0.3999739016 -0.3049756659 -0.2972065181  0.2219369751 #> [36]  0.0922842721  0.0847617900  0.1410189560  0.2014800066  0.0435775483 #> [41]  0.0473444049  0.0002081057  0.1116041131  0.1821950393  0.2762093328 #> [46]  0.2536684868  0.2438941353 -0.0079364555  0.0696778523  0.2130680810 #> [51]  0.1943669492 -0.4749416038 -0.3847473585 -0.2439234943 -0.0933183069 #> [56]  0.2647416483  0.6417824138  0.1442284061 -0.0817662808 -0.5389696306 #> [61]  0.1206397515  0.2681584390  0.4782882586 -0.1287510993  0.2006186495 #>  #> [[12]] #>  [1]  0.09239069 -0.16743829  0.33166394  0.59162454  0.12836412  0.12892244 #>  [7]  0.12699411  0.32788524  0.32728781 -0.13499277  0.20935209  0.18618874 #> [13]  0.18586244  0.39920505  0.22662733  0.44962476 -0.16261146 -0.06225811 #> [19]  0.15270938 -0.03916203 -0.02229687  0.17521314  0.06188720  0.06297770 #> [25] -0.02322722  0.36383891  0.14439093 -0.19216599 -0.02404298 -0.07681728 #> [31]  0.59984752 -0.22294342  0.57518635  0.54519855  0.22193698  0.09228427 #> [37]  0.14038791  0.08018843  0.20148001  0.04357755  0.04734440  0.49696086 #> [43]  0.21855271  0.18219504  0.27620933  0.25366849  0.24389414  0.31587462 #> [49]  0.16507511  0.21306808  0.19436695 -0.47494160 -0.38474736 -0.24392349 #> [55]  0.29481415  0.26474165 -0.41806791  0.14422841  0.30548078  0.76268413 #> [61]  0.10307475 -0.04444394 -0.25457376 -0.12875110  0.20061865 #>"}]
